% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyR.R
\docType{methods}
\name{lazyLs}
\alias{lazyLs}
\title{List contents of lazy load database, using a tag}
\usage{
lazyLs(tag = NULL, lazyDir = NULL, tagType = "objectName:",
  archivistCol = "tag", exact = FALSE)
}
\arguments{
\item{tag}{Character string (not vectorized!). Search objects using this tag as a pattern.}

\item{lazyDir}{Character string of directory to be used for the lazy databases.
This creates an archivist repository.}

\item{tagType}{Some tags have prefixes, such as "class:".
The search can be thus within a tagType if this is specified.
If "all", then all tag types are returned.}

\item{archivistCol}{The name of the column to return from a showLocalRepo call.
This can be "tag" or "artifact" or "createdDate".}

\item{exact}{Logical. Should the tag matching be exact matching or not.

If exact=TRUE is used, this is equivalent to a regexp expression with ^expr$.}
}
\value{
A character vector that matches the tagType, tag, and archivistCol requested.
}
\description{
This will simply list object names that are contained within an archivist
lazy load database. The listing can be done with a tag.
}
\examples{
\dontrun{
tmpdir <- lazyDir(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
lazyLs(lazyDir=tmpdir)

# can set lazyDir and don't need lazyDir argument
lazyDir(tmpdir)
lazyLs()

# can add a tag to file list
lazyLs(tag = "function") # empty character vector
lazyLs(tag = "numeric") # object names of a and b

# To return the values of different tags, use the tagType argument
lazyLs(tagType="objectName:") # Just object names, the default
lazyLs(tagType="class:")      # All classes in the database,
                              #returns multiple lines per object
lazyLs(tagType="all")         # returns all information in the database
unlink(tmpdir, recursive = TRUE)
}
}
\author{
Eliot McIntire
}
\seealso{
\code{\link{lazyLs}}, \code{\link{lazyRm}}, \code{\link{lazyLoad2}},
\code{\link{lazyIs}}.
}

