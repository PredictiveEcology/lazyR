% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyR.R
\docType{methods}
\name{copyDir}
\alias{copyDir}
\title{Copy a directory using Robocopy on Windows and rsync on linux}
\usage{
copyDir(fromDir = NULL, toDir = NULL, useRobocopy = TRUE,
  overwrite = TRUE, delDestination = FALSE, create = TRUE,
  silent = FALSE)
}
\arguments{
\item{fromDir}{The source lazyDir}

\item{toDir}{The new lazyDir}

\item{useRobocopy}{For Windows, this will use a system call to Robocopy which appears to be much
faster than the internal \code{file.copy} function. Uses /MIR flag.}

\item{overwrite}{Passed to \code{file.copy}}

\item{delDestination}{Logical, whether the destination should have any files deleted, if they don't exist
in the source. This is /purge}

\item{create}{Passed to \code{checkLazyDir}}

\item{silent}{Should a progress be printed}
}
\description{
This will copy an entire directory using the faster copy options in Windows and Linux.
The function will default to \code{file.copy} (which is slow). For lazyR databases,
this can be useful
for copying everything to a new computer, a network location etc.
}
\examples{
\dontrun{
library(raster)
library(rgdal)
# make some objects
obj1 <- 1:10
obj2 <- 11:20
r <- raster::raster(matrix(1:9, ncol=3))
raster::writeRaster(r, file.path(tempdir(),"r.tif"), overwrite=TRUE)
raster::writeRaster(r, file.path(tempdir(),"ras.tif"), overwrite=TRUE)
rm(r, ras)
r <- raster::raster(file.path(tempdir(),"r.tif"))
ras <- raster::raster(file.path(tempdir(),"ras.tif"))

# identify a new and old lazyLoad db
fromDir <- file.path(tempdir(), "old")
toDir <- file.path(tempdir(), "new")
lazySave(obj1, r, ras, obj2, lazyDir=fromDir, overwrite=TRUE)

# copy to new lazyDir location
copyDir(fromDir, toDir, create=TRUE)

# remove the objects in memory and the old lazyLoad db
rm(obj1, obj2, r, ras)
unlink(fromDir, recursive=TRUE)

lazyLoad2(lazyDir=toDir) # Objects should be visible after this
ls()
unlink(toDir, recursive=TRUE)
}
}
\author{
Eliot McIntire
}

