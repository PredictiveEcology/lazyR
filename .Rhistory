## load packages and helper functions
raw_GitHub <- "https://raw.githubusercontent.com/"
repo_imaps <- "achubaty/interactive-maps"
branch_imaps <- "master"
repo_SpaDES <- "PredictiveEcology/SpaDES"
branch_SpaDES <- "development"
# interactive-maps//init.R -- libraries
paste0(raw_GitHub, repo_imaps, "/", branch_imaps, "/R/init.R") %>%
source_url(.)
# interactive-maps//polygons.R -- helper functions
paste0(raw_GitHub, repo_imaps, "/", branch_imaps, "/R/polygons.R") %>%
source_url(.)
# interactive-maps//rasters.R -- helper functions
paste0(raw_GitHub, repo_imaps, "/", branch_imaps, "/R/rasters.R") %>%
source_url(.)
# McIntire-lab//lazyR
devtools::load_github("PredictiveEcology/lazyR")
# SpaDES//thinSpatialPolygons.R -- helper function
paste0(raw_GitHub, repo_SpaDES, "/", branch_SpaDES,
"/_ignore/thinSpatialPolygons.R") %>%
source_url(.)
## load all lazy databases in the data directory
lazyDBs <- dir(maps.dir, full.names = TRUE, recursive = TRUE, pattern = "rdx$")  %>%
strsplit(., split=".rdx") %>%
unlist %>%
sapply(., lazyLoad, envir = .GlobalEnv)
reRunAll <- TRUE
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
getwd()
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazyLs(tag="maps")
rm(divPolyAgeCRS, divPolyLccCRS, divPolyBorealCRS, roadsDivAgeCRS)
lazyLoad2(lazyLs(tag="maps"))
dev();Plot(divPolyAgeCRS)
crs(divPolyAgeCRS)
sapply(ls(), class)
sapply(ls(), function(x) get(x) %>% class)
crs(ageBorealAgeCRS)
crs(studyAreaPolyLccCRS)
sapply(ls(), function(x) is(get(x), ".spatialObjects")
)
lazySave(ageDivLccCRS)
devtools::load_all(".")
lazyRm("ageDivLccCRS")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazyRm("ageDivLccCRS")
lazyLs()
lazySave(ageDivLccCRS)
nchar(slot(slot(obj, "file"), "name"))
slot(obj, "file")
slot(slot(obj, "file"), "name")
lazyLs(tag=paste0(file), archivistCol = "artifact")
file
objList
slot(slot(obj, "file"), "name")
?archivist
devtools::load_all(".")
lazySave(ageDivLccCRS)
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
obj
is(obj, ".spatialObject")
is(obj, ".spatialObjects")
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazyLs("crs")
lazyLs("crs", archivistCol = "tag")
lazyLs("crs", archivistCol = "tags")
lazyLs("crs", archivistCol = "tag")
lazyLs(tagType = "crs:")
lazySave(divPolyAgeCRS, tags="maps")
function(N) {
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
getwd()
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyRm("d", exact=FALSE)
devtools::load_all(".")
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
getwd()
# Save objects
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("d", exact=FALSE)
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("d", exact=TRUE)
lazyRm("divPoly", exact=TRUE)
lazyRm("divPoly", exact=FALSE)
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
# list what is in the lazy load db
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("d", exact=TRUE)
y
exact
lazyRm("divPoly", exact=FALSE)
y
toRm
y
toRm
z <- lazyLs(y, archivistCol = "artifact", lazyDir=lazyDir, exact=exact)
z
devtools::load_all(".")
length(z)>0
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
getwd()
# Save objects
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
# list what is in the lazy load db
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("d", exact=TRUE)
lazyRm("divPoly", exact=FALSE)
z
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
getwd()
# Save objects
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
# list what is in the lazy load db
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("d", exact=TRUE)
lazyRm("divPoly", exact=FALSE)
z
toRm
lazyLs(toRm)
toRm
lazyLs(toRm)
showLocalRepo(repoDir=lazyDir, method="tags") %>%
filter(artifact==z) %>%
filter(grepl("filename:", tag)) %>%
select(tag)
showLocalRepo(repoDir=lazyDir, method="tags") %>%
filter(artifact==z)
showLocalRepo(repoDir=lazyDir) %>%
filter(artifact==z)
showLocalRepo(repoDir=lazyDir)
toRm
z <- lazyLs(y, archivistCol = "artifact", lazyDir=lazyDir, exact=exact)
z
devtools::load_all(".")
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
# list what is in the lazy load db
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("divPoly", exact=FALSE)
showLocalRepo(toRm)
toRm
showLocalRepo()
showLocalRepo() %>% filter(md5hash==toRm)
showLocalRepo(method="tags") %>% filter(md5hash==toRm) %>%
showLocalRepo(method="tags") %>% filter(md5hash==toRm)
showLocalRepo(method="tags")
showLocalRepo(method="tags") %>% filter_("artifact"==toRm)
showLocalRepo(method="tags") %>% filter(artifact==toRm)
showLocalRepo(method="tags") %>% filter(artifact==toRm) %>% select(grep("objectName:", tag)
)
showLocalRepo(method="tags") %>% filter(artifact==toRm)
showLocalRepo(method="tags") %>% filter(artifact==toRm) %>% select(grepl("objectName:", tag))
showLocalRepo(method="tags") %>% filter(artifact==toRm) %>% select(grepl(pattern="objectName:", tag))
showLocalRepo(method="tags") %>% filter(artifact==toRm) %>% filter(grepl(pattern="objectName:", tag))
showLocalRepo(method="tags") %>%
filter(artifact==toRm) %>%
filter(grepl(pattern="objectName:", tag)) %>%
gsub(.$tag, pattern="objectName:", replacement="")
showLocalRepo(method="tags") %>%
filter(artifact==toRm) %>%
filter(grepl(pattern="objectName:", tag)) %>%
select(tags %>%)
gsub(.$tag, pattern="objectName:", replacement="")
showLocalRepo(method="tags") %>%
filter(artifact==toRm) %>%
filter(grepl(pattern="objectName:", tag)) %>%
select(tags) %>%
gsub(.$tag, pattern="objectName:", replacement="")
showLocalRepo(method="tags") %>%
filter(artifact==toRm) %>%
filter(grepl(pattern="objectName:", tag)) %>%
select_("tag") %>%
gsub(.$tag, pattern="objectName:", replacement="")
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
# list what is in the lazy load db
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("divPoly", exact=FALSE)
toRm
lazyObjectName(toRm)
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
getwd()
# Save objects
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
# list what is in the lazy load db
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("divPoly", exact=FALSE)
lazyObjectName(toRm)
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyLs()
lazyRm("divPoly", exact=FALSE)
lazyObjectName(toRm)
toRm
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazyRm("divPoly", exact=FALSE)
lazyObjectName(toRm)
md5Hash
showLocalRepo(method="tags")
showLocalRepo(method="tags") %>%
filter(artifact==md5Hash)
showLocalRepo(method="tags") %>%
filter(artifact==md5Hash) %>%
filter(grepl(pattern="objectName:", tag))
showLocalRepo(method="tags") %>%
filter(artifact==md5Hash) %>%
filter(grepl(pattern="objectName:", tag)) %>%
select_("tag")
lazyObjectName <- showLocalRepo(method="tags") %>%
filter(artifact==md5Hash) %>%
filter(grepl(pattern="objectName:", tag)) %>%
select_("tag") %>%
gsub(.$tag, pattern="objectName:", replacement="")
lazyObjectName
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazyRm("divPoly", exact=FALSE)
lazyObjectName(toRm)
y
file.path(lazyDir, "gallery", paste0(toRm, ".rdb"))
ObjName <- lazyObjectName(toRm)
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazyRm("divPoly", exact=FALSE)
devtools::load_all(".")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps", clearRepo = TRUE)
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazySave(studyRegion)
lazyLs(tag=".spatialObjects")
lazyLs(tag="SpatialPolygons")
lazyLs(tag="Raster")
lazyLs(tag="maps")
lazyRm("divPoly", exact=FALSE)
lazyLs()
lazyRm("d", exact=TRUE)
lazyRm("divPoly", exact=TRUE)
lazyRm(lazyLs("maps"))
lazySave(divPolyLccCRS, tags="maps")
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir")
lazySave(divPolyLccCRS, tags="maps")
lazySave(divPolyAgeCRS, tags="maps")
lazySave(divPolyBorealCRS, tags="maps")
lazySave(roadsDivAgeCRS, tags="maps")
lazyLs(tag=".spatialObjects")
lazyLs(tag="crs")
lazyLs(tag="crs=aea")
lazyLs(tag="aea")
lazyLs(tag="aea", exact=TRUE)
load_all("~/GitHub/SpaDES")
devtools::load_all(".")
saveToRepol
saveToRepo
select_
dplyr::select_
showMethods(dplyr::select_, includeDefs = TRUE)
dplyr::select_
dplyr::select
dplyr::select_
isS4(dplyr::select_)
isS3(dplyr::select_)
isS4(dplyr::select_)
ls()
load_all("~/GitHub/lazyR")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir3")
dir.create("//W-VIC-A105254/shared/data/lazyDir3")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir3")
lazySave(bd)
lazySave(bd, clearRepo = TRUE)
dir.create("//W-VIC-A105254/shared/data/lazyDir3")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir3")
lazySave(bd, clearRepo = TRUE)
dir.create("//W-VIC-A105254/shared/data/lazyDir3")
setLazyDir("//W-VIC-A105254/shared/data/lazyDir3")
lazySave(bd)
lazyLs()
dir.create("//W-VIC-A105254/shared/data/lazyDir3")
lazyLs()
setLazyDir(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
lazySave(a)
lazyIs("a", "numeric")
lazyIs("a") # shows all
lazyRm("a")
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
lazyLs(ld)         # fails as above
a <- "foo"
lazySave(a)
a
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)
setLazyDir(ld)
lazySave(a)
b
b = a
b1 = a
lazySave(b1)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
library(SpaDES)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
setLazyDir(tmpdir)
lazyLs()
lazyLs(a)
lazyLs()
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
lazyLs()
a <- "foo"
library(SpaDES)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
lazyLs(lazyDir = ld)
lazySave(b, lazyDir = ld)
b
tmpdir
devtools::load_all(".")
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
a <- "foo"
lazySave(a)
lazyLs()
library(SpaDES)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
lazyLs(lazyDir=tmpdir)
devtools::load_all(".")
library(SpaDES)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
lazyLs(lazyDir=tmpdir)
devtools::load_all(".")
lazyLs(lazyDir=tmpdir)
tag2
grepl(paste0(tag2), tag)
devtools::load_all(".")
lazyLs(lazyDir=tmpdir)
devtools::load_all(".")
lazyLs(lazyDir=tmpdir)
library(SpaDES)
tmpdir <- checkPath(file.path(tempdir(), "lazyDir"), create=TRUE)
a <- rnorm(10)
b <- rnorm(20)
lazySave(a, b, lazyDir = tmpdir)
lazyLs(lazyDir=tmpdir)
# can set lazyDir and don't need lazyDir argument
setLazyDir(tmpdir)
lazyLs()
# can add a tag to file list
lazyLs(tag = "function") # empty character vector
lazyLs(tag = "numeric") # object names of a and b
# To return the values of different tags, use the tagType argument
lazyLs(tagType="objectName:") # Just object names, the default
lazyLs(tagType="class:")      # All classes in the database,
#returns multiple lines per object
lazyLs(tagType="all")         # returns all information in the database
unlink(tmpdir, recursive = TRUE)
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
a <- "foo"
lazySave(a)
lazyLs()
lazyLs(ld)
lazyRm("a")
lazyLs(ld)
lazyLs()
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
lazyLs(ld)         # fails as above
?setLocalRepo
load_all("~/GitHub/lazyR")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
ld
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
ld
ld <- file.path(tempdir(), "lazydb")
dir.create(ld)     # shouldn't have to make this manually
setLazyDir(ld)
lazyLs(ld)
